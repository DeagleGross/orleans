//------------------------------------------------------------------------------
// <auto-generated>
//     https://github.com/dotnet/orleans/pull/8694/files#diff-f701cc23d8facf515e98f44aa13b9b758085af5e60e8e45fb380df78029527ab
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Extensions.DependencyInjection;

namespace Orleans.Runtime
{
    /// <summary>
    /// Extensions for working with keyed services.
    /// </summary>
    public static class KeyedServiceExtensions
    {
        /// <summary>
        /// Register a singleton named service
        /// </summary>
        public static IServiceCollection AddSingletonNamedService<TService>(this IServiceCollection collection, string name, Type implementationType)
            where TService : class
        {
            return collection.AddSingletonKeyedService<string, TService>(name, (sp, name) => (TService)ActivatorUtilities.CreateInstance(sp, implementationType));
        }
    }
}